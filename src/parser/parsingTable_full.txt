82,107
$,Alder,Blue,Cynthia,Diantha,Drake,Charmander,Charmeleon,Charizard,Torchic,Combusken,Blaziken,Chimchar,Monferno,Infernape,Gastly,Gengar,Dusclops,Bulbasaur,Ivysaur,Venusaur,Chikorita,Bayleef,Meganium,Treecko,Grovyle,Sceptile,Rayquaza,Groudon,Kyogre,Zapdos,Articuno,Moltres,Regirock,Regice,Registeel,Ash,awoke!,fainted!,you!,returned,numeroEntero,hp.,appeared.,disappeared.,fights,with,without,spreading,splitting,healed,lost,knows,now;,and,or,Trainer,challenges,chosing,now!,stronger,weaker,equal,than,to,visible,invisible,Is,?,otherwise,Adventure,continues!,Battle,ends,when,...,has,been,defeated!,A,wild,appears!
S,,S ::= program $,S ::= program $,S ::= program $,S ::= program $,S ::= program $,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,S ::= program $,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
program,,program ::= declList AshFunction,program ::= declList AshFunction,program ::= declList AshFunction,program ::= declList AshFunction,program ::= declList AshFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,program ::= declList AshFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
declList,,declList ::= declararFuncion declList,declList ::= declararFuncion declList,declList ::= declararFuncion declList,declList ::= declararFuncion declList,declList ::= declararFuncion declList,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,declList ::= ε,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
entrenador,,entrenador ::= Alder,entrenador ::= Blue,entrenador ::= Cynthia,entrenador ::= Diantha,entrenador ::= Drake,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
PokemonNumeric,,,,,,,PokemonNumeric ::= Charmander,PokemonNumeric ::= Charmeleon,PokemonNumeric ::= Charizard,PokemonNumeric ::= Torchic,PokemonNumeric ::= Combusken,PokemonNumeric ::= Blaziken,PokemonNumeric ::= Chimchar,PokemonNumeric ::= Monferno,PokemonNumeric ::= Infernape,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
PokemonBoolean,,,,,,,,,,,,,,,,PokemonBoolean ::= Gastly,PokemonBoolean ::= Gengar,PokemonBoolean ::= Dusclops,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
PokemonLiteral,,,,,,,,,,,,,,,,,,,PokemonLiteral ::= Bulbasaur,PokemonLiteral ::= Ivysaur,PokemonLiteral ::= Venusaur,PokemonLiteral ::= Chikorita,PokemonLiteral ::= Bayleef,PokemonLiteral ::= Meganium,PokemonLiteral ::= Treecko,PokemonLiteral ::= Grovyle,PokemonLiteral ::= Sceptile,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
pokemonLegendario,,,,,,,,,,,,,,,,,,,,,,,,,,,,pokemonLegendario ::= Rayquaza,pokemonLegendario ::= Groudon,pokemonLegendario ::= Kyogre,pokemonLegendario ::= Zapdos,pokemonLegendario ::= Articuno,pokemonLegendario ::= Moltres,pokemonLegendario ::= Regirock,pokemonLegendario ::= Regice,pokemonLegendario ::= Registeel,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
ashProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ashProd ::= Ash,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
awokeProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,awokeProd ::= awoke!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
fainted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,fainted ::= fainted!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
you,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,you ::= you!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
returnProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,returnProd ::= returned,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
PokemonVar,,,,,,,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonNumeric,PokemonVar ::= PokemonBoolean,PokemonVar ::= PokemonBoolean,PokemonVar ::= PokemonBoolean,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,PokemonVar ::= PokemonLiteral,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
declararFuncion,,declararFuncion ::= inicioFuncion contFunc,declararFuncion ::= inicioFuncion contFunc,declararFuncion ::= inicioFuncion contFunc,declararFuncion ::= inicioFuncion contFunc,declararFuncion ::= inicioFuncion contFunc,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
contFunc,,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,contFunc ::= code finFuncion,,,,,,,,,,,,,,contFunc ::= code finFuncion,,,,,,,,,,,,,,,,contFunc ::= code finFuncion,,,,,,,,,,,contFunc ::= code finFuncion,,,,,,,,,,,,contFunc ::= code finFuncion,,ñ
inicioFuncion,,inicioFuncion ::= entrenador awokeProd,inicioFuncion ::= entrenador awokeProd,inicioFuncion ::= entrenador awokeProd,inicioFuncion ::= entrenador awokeProd,inicioFuncion ::= entrenador awokeProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
finFuncion,,finFuncion ::= entrenador fainted,finFuncion ::= entrenador fainted,finFuncion ::= entrenador fainted,finFuncion ::= entrenador fainted,finFuncion ::= entrenador fainted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,finFuncion ::= returnProd contFinFuncion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
contFinFuncion,,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,contFinFuncion ::= parametros contFinFuncionProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
contFinFuncionProd,,contFinFuncionProd ::= entrenador fainted,contFinFuncionProd ::= entrenador fainted,contFinFuncionProd ::= entrenador fainted,contFinFuncionProd ::= entrenador fainted,contFinFuncionProd ::= entrenador fainted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
AshFunction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AshFunction ::= AshFunctionInit contFuncAsh,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
contFuncAsh,,,,,,,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,contFuncAsh ::= code AshFunctionEnd,,,,,,,,,,contFuncAsh ::= code AshFunctionEnd,,,,,,,,,,,,,,,,,,,,contFuncAsh ::= code AshFunctionEnd,,,,,,,,,,,contFuncAsh ::= code AshFunctionEnd,,,,,,,,,,,,contFuncAsh ::= code AshFunctionEnd,,ñ
AshFunctionInit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AshFunctionInit ::= ashProd awokeProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
AshFunctionEnd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AshFunctionEnd ::= ashProd fainted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
code,,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= PokemonVar bodyCode,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,code ::= ε,,,,code ::= ε,,,,,,,,,,,,,,,,code ::= llamarFuncion code,,,,,,,,,,,code ::= IE code,,code ::= ε,code ::= ε,,,,,,,,,code ::= W code,,ñ
bodyCode,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bodyCode ::= Alpha code,,,,bodyCode ::= Alpha code,bodyCode ::= Alpha code,bodyCode ::= Alpha code,,,,,bodyCode ::= Alpha code,bodyCode ::= Alpha code,bodyCode ::= Alpha code,,,,,,,,,,,,,,,,,,,,,,,,bodyCode ::= Alpha code,,,,,ñ
Alpha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Alpha ::= varDecl,,,,Alpha ::= BooleanAssignation,Alpha ::= BooleanAssignation,Alpha ::= operation,,,,,Alpha ::= modif,Alpha ::= modif,Alpha ::= LiteralAssignation,,,,,,,,,,,,,,,,,,,,,,,,Alpha ::= NumericAssignation,,,,,ñ
varDecl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,varDecl ::= you,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
numeroEnteroProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,numeroEnteroProd ::= numeroEntero,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
hpProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hpProd ::= hp.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
NumericAssignation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,NumericAssignation ::= hasProd numValHP,,,,,ñ
numValHP,,,,,,,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,numValHP ::= numericVal hpProd,,,,,,,,,,,,,,,numValHP ::= numericVal hpProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
numericVal,,,,,,,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,numericVal ::= PokemonVar,,,,,,,,,,,,,,,numericVal ::= numeroEnteroProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
BooleanAssignation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,BooleanAssignation ::= booleanAction,BooleanAssignation ::= booleanAction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
booleanAction,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,booleanAction ::= appeared.,booleanAction ::= disappeared.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
operation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,operation ::= fights otherVar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
otherVar,,,,,,,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,otherVar ::= PokemonVar opCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
opCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,opCont ::= oper PokemonVar,opCont ::= oper PokemonVar,opCont ::= oper PokemonVar,opCont ::= oper PokemonVar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
oper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,oper ::= with,oper ::= without,oper ::= spreading,oper ::= splitting,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
modif,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,modif ::= modifOper valueHP,modif ::= modifOper valueHP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
valueHP,,,,,,,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,valueHP ::= numericVal hpProd,,,,,,,,,,,,,,,valueHP ::= numericVal hpProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
modifOper,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,modifOper ::= healed,modifOper ::= lost,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
LiteralAssignation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,LiteralAssignation ::= knows litAssig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
litAssig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,litAssig ::= now;,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
Bool,,,,,,,,,,,,,,,,Bool ::= PokemonBoolean boolAssig,Bool ::= PokemonBoolean boolAssig,Bool ::= PokemonBoolean boolAssig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
boolAssig,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,boolAssig ::= bool boolAssig',boolAssig ::= bool boolAssig',,,,,,,,,,,,,,,,,,,,,,,,,,ñ
boolAssig',,,,,,,,,,,,,,,,boolAssig' ::= PokemonBoolean,boolAssig' ::= PokemonBoolean,boolAssig' ::= PokemonBoolean,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
bool,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,bool ::= and,bool ::= or,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
llamarFuncion,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,llamarFuncion ::= trainerProd llamarFuncionCont,,,,,,,,,,,,,,,,,,,,,,,,,ñ
llamarFuncionCont,,llamarFuncionCont ::= entenadorContexto callFCont,llamarFuncionCont ::= entenadorContexto callFCont,llamarFuncionCont ::= entenadorContexto callFCont,llamarFuncionCont ::= entenadorContexto callFCont,llamarFuncionCont ::= entenadorContexto callFCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,llamarFuncionCont ::= entenadorContexto callFCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
trainerProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,trainerProd ::= Trainer,,,,,,,,,,,,,,,,,,,,,,,,,ñ
callFCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,callFCont ::= challengesProd callFContA,,,,,,,,,,,,,,,,,,,,,,,,ñ
challengesProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,challengesProd ::= challenges,,,,,,,,,,,,,,,,,,,,,,,,ñ
callFContA,,callFContA ::= entrenadorFuncion resLlamar,callFContA ::= entrenadorFuncion resLlamar,callFContA ::= entrenadorFuncion resLlamar,callFContA ::= entrenadorFuncion resLlamar,callFContA ::= entrenadorFuncion resLlamar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
resLlamar,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,resLlamar ::= chosingProd paramAssig,resLlamar ::= now!,,,,,,,,,,,,,,,,,,,,,,ñ
chosingProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,chosingProd ::= chosing,,,,,,,,,,,,,,,,,,,,,,,ñ
paramAssig,,,,,,,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,paramAssig ::= parametros nowProdExcl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,paramAssig ::= parametros nowProdExcl,,,,,,,,,,,,,,,,,,,,,,ñ
nowProdExcl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,nowProdExcl ::= now!,,,,,,,,,,,,,,,,,,,,,,ñ
entenadorContexto,,entenadorContexto ::= entrenador,entenadorContexto ::= entrenador,entenadorContexto ::= entrenador,entenadorContexto ::= entrenador,entenadorContexto ::= entrenador,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,entenadorContexto ::= Ash,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
entrenadorFuncion,,entrenadorFuncion ::= entrenador,entrenadorFuncion ::= entrenador,entrenadorFuncion ::= entrenador,entrenadorFuncion ::= entrenador,entrenadorFuncion ::= entrenador,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
parametros,,parametros ::= ε,parametros ::= ε,parametros ::= ε,parametros ::= ε,parametros ::= ε,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,parametros ::= PokemonVar parametros,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,parametros ::= ε,,,,,,,,,,,,,,,,,,,,,,ñ
numericComparation,,,,,,,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,numericComparation ::= PokemonNumeric compCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
compCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,compCont ::= numericSymbol PokemonNumeric,compCont ::= numericSymbol PokemonNumeric,compCont ::= numericSymbol PokemonNumeric,,,,,,,,,,,,,,,,,,,ñ
numericSymbol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,numericSymbol ::= stronger thanProd,numericSymbol ::= weaker thanProd,numericSymbol ::= equal toProd,,,,,,,,,,,,,,,,,,,ñ
thanProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,thanProd ::= than,,,,,,,,,,,,,,,,,,ñ
toProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,toProd ::= to,,,,,,,,,,,,,,,,,ñ
booleanCheck,,,,,,,,,,,,,,,,booleanCheck ::= PokemonBoolean visibility,booleanCheck ::= PokemonBoolean visibility,booleanCheck ::= PokemonBoolean visibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
visibility,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,visibility ::= visible,visibility ::= invisible,,,,,,,,,,,,,,,ñ
literalComparation,,,,,,,,,,,,,,,,,,,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,literalComparation ::= PokemonLiteral litCompCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
litCompCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,litCompCont ::= literalSymbol PokemonLiteral,,,,,,,,,,,,,,,,,,,ñ
literalSymbol,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,literalSymbol ::= equal to,,,,,,,,,,,,,,,,,,,ñ
IE,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IE ::= Is IECont,,,,,,,,,,,,,,ñ
IECont,,,,,,,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,IECont ::= inicioIF IEBody,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
IEBody,,,,,,,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,IEBody ::= code elseCondition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IEBody ::= code elseCondition,,,,,,,,,,,IEBody ::= code elseCondition,,IEBody ::= code elseCondition,IEBody ::= code elseCondition,,,,,,,,,IEBody ::= code elseCondition,,ñ
inicioIF,,,,,,,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,inicioIF ::= comparacion interrogantProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
interrogantProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,interrogantProd ::= ?,,,,,,,,,,,,,ñ
elseCondition,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elseCondition ::= else,elseCondition ::= finIF,,,,,,,,,,,ñ
comparacion,,,,,,,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= numericComparation,comparacion ::= booleanCheck,comparacion ::= booleanCheck,comparacion ::= booleanCheck,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,comparacion ::= literalComparation,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
else,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,else ::= otherwiseProd elseBody,,,,,,,,,,,,ñ
otherwiseProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,otherwiseProd ::= otherwise,,,,,,,,,,,,ñ
elseBody,,,,,,,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,elseBody ::= code finIF,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,elseBody ::= code finIF,,,,,,,,,,,elseBody ::= code finIF,,,elseBody ::= code finIF,,,,,,,,,elseBody ::= code finIF,,ñ
finIF,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,finIF ::= adventureProd continuesProd,,,,,,,,,,,ñ
adventureProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,adventureProd ::= Adventure,,,,,,,,,,,ñ
continuesProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,continuesProd ::= continues!,,,,,,,,,,ñ
W,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,W ::= declaracionWhile whileCont,,ñ
whileCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,whileCont ::= condicionWhile whileBody,,,,,,,,,ñ
whileBody,,,,,,,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,whileBody ::= code finWhile,,,,,,,,,,,,,,,,,,,,,whileBody ::= code finWhile,,,,,,,,,,,whileBody ::= code finWhile,,,,,,,,,,,,whileBody ::= code finWhile,,ñ
condicionWhile,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,condicionWhile ::= BattleProd condWCont,,,,,,,,,ñ
BattleProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,BattleProd ::= Battle,,,,,,,,,ñ
condWCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,condWCont ::= endsProd lastWCont,,,,,,,,ñ
endsProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,endsProd ::= ends,,,,,,,,ñ
lastWCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,lastWCont ::= whenProd compBodyW,,,,,,,ñ
whenProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,whenProd ::= when,,,,,,,ñ
compBodyW,,,,,,,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,compBodyW ::= comparacion suspensiveDotsProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
suspensiveDotsProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,suspensiveDotsProd ::= ...,,,,,,ñ
finWhile,,,,,,,,,,,,,,,,,,,,,,,,,,,,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,finWhile ::= pokemonLegendario contFw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
contFw,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,contFw ::= hasProd lastFW,,,,,ñ
hasProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,hasProd ::= has,,,,,ñ
lastFW,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,lastFW ::= beenProd defeatedProd,,,,ñ
beenProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,beenProd ::= been,,,,ñ
defeatedProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,defeatedProd ::= defeated!,,,ñ
declaracionWhile,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,declaracionWhile ::= aProd decWCont,,ñ
aProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,aProd ::= A,,ñ
decWCont,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,decWCont ::= wildProd bodyW,ñ
wildProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,wildProd ::= wild,ñ
bodyW,,,,,,,,,,,,,,,,,,,,,,,,,,,,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,bodyW ::= pokemonLegendario appearsProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ñ
appearsProd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,appearsProd ::= appears!